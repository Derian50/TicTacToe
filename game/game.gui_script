function init(self)
	player_turn = "x"
	cells = {
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1}
	}
	game_end = false
end

local function index_to_row_column(index)
	local row = math.ceil(index / 3)
	local column = 1 + (index - 1) % 3
	return row, column
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released then
		for i=1,9 do
			if gui.pick_node(gui.get_node("cell" .. i), action.x, action.y) and not game_end then
				play_in_cell(i)
				break
			elseif game_end then
				restart()
				break
			end
		end
	end
end
function cell_is_fill(row, column)
	if(cells[row][column] ~= -1) then
		return true
	else
		return false
	end
end
function play_in_cell(cell_index)
	row, column = index_to_row_column(cell_index)
	if (cell_is_fill(row, column)) then 
		return
	end
	local node = gui.get_node("cell" .. cell_index)
	local text = gui.get_node("text_turn")
	gui.set_enabled(node, true)
	if(player_turn == "x") then
		gui.play_flipbook(node, hash("x" .. math.random(4)))
		player_turn = "o"
		cells[row][column] = 1
		gui.set_text(text, "ХОДЯТ НОЛИКИ")
	else
		gui.play_flipbook(node, hash("o" .. math.random(4)))
		player_turn = "x"
		cells[row][column] = 2
		gui.set_text(text, "ХОДЯТ КРЕСТИКИ")
	end
	if(check_draw()) then
		game_end = true
		gui.set_text(text, "НИЧЬЯ")
	end
	if(check_winner()) then
		game_end = true
		if(player_turn == "o") then
			gui.set_text(text, "ПОБЕДИЛИ КРЕСТИКИ")
		else
			gui.set_text(text, "ПОБЕДИЛИ НОЛИКИ")
		end
	end
	
end
function check_match(cells)
	local match = cells[1] ~= -1 and cells[1] == cells[2] and cells[1] == cells[3]
	if match then
		return cells[1]
	end
end
function check_winner()
	local match_row =
	check_match(cells[1]
	or check_match(cells[2])
	or check_match(cells[3]))

	local match_column =
	
	check_match({ cells[1][1], cells[2][1], cells[3][1] })
	or check_match({ cells[1][2], cells[2][2], cells[3][2] })
	or check_match({ cells[1][3], cells[2][3], cells[3][3] })
	
	or check_match({ cells[1][1], cells[1][2], cells[1][3] })
	or check_match({ cells[2][1], cells[2][2], cells[2][3] })
	or check_match({ cells[3][1], cells[3][2], cells[3][3] })

	local match_cross =
	check_match({ cells[1][1], cells[2][2], cells[3][3] })
	or check_match({ cells[3][1], cells[2][2], cells[1][3] })

	local won = match_row or match_column or match_cross
	return won
end


function check_draw()
	for i=1,9 do
		local row, column = index_to_row_column(i)
		if cells[row][column] == -1 then
			return false
		end
	end
	return true
end
function restart()
	player_turn = "x"
	local text = gui.get_node("text_turn")
	cells = {
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1}
	}
	game_end = false
	gui.set_text(text, "Посмотрим что будет на этот раз")
	for i = 1,9 do
		row, column = index_to_row_column(i)
		local node = gui.get_node("cell" .. i)
		gui.set_enabled(node, false)
	end
end